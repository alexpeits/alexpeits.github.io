@inproceedings{eisenberg-2020-stitch,
  author =       {Eisenberg, Richard A.},
  title =        {Stitch: The Sound Type-Indexed Type Checker (Functional
                  Pearl)},
  booktitle =    {Proceedings of the 13th ACM SIGPLAN International Symposium on
                  Haskell},
  year =         2020,
  pages =        {39-53},
  doi =          {10.1145/3406088.3409015},
  url =          {https://doi.org/10.1145/3406088.3409015},
  abstract =     {A classic example of the power of generalized algebraic
                  datatypes (GADTs) to verify a delicate implementation is the
                  type-indexed expression AST. This functional pearl refreshes
                  this example, casting it in modern Haskell using many of GHC's
                  bells and whistles. The Stitch interpreter is a full
                  executable interpreter, with a parser, type checker,
                  common-subexpression elimination, and a REPL. Making heavy use
                  of GADTs and type indices, the Stitch implementation is clean
                  Haskell code and serves as an existence proof that Haskell's
                  type system is advanced enough for the use of fancy types in a
                  practical setting. The paper focuses on guiding the reader
                  through these advanced topics, enabling them to adopt the
                  techniques demonstrated here.},
  address =      {New York, NY, USA},
  isbn =         9781450380508,
  keywords =     {Haskell, fancy types, GADTs},
  location =     {Virtual Event, USA},
  numpages =     15,
  publisher =    {Association for Computing Machinery},
  series =       {Haskell 2020},
}